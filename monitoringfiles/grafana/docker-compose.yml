version: "3.8"
name: monitoring-stack
services:
  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./prometheus_grafana_data:/var/lib/grafana
    ports:
     - '3000:3000'
    environment:
     GF_SERVER_DOMAIN: grafana.biotechfarms.net
     GF_RENDERING_SERVER_URL: http://94.237.65.245:8081/render
     GF_RENDERING_CALLBACK_URL: http://94.237.65.245:3000/
     GF_LOG_FILTERS: rendering:error
     GF_PATHS_PROVISIONING: /etc/grafana/provisioning
     GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    entrypoint:
     - sh
     - -euc
     - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://grafana:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh   
    networks:
     - grafana
     
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: grafana-renderer
    ports:
      - 8081:8081    
    networks:
     - grafana
 
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/prom_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=15GB'
      - '--log.level=error'
      - '--web.enable-admin-api'
    ports:
     - '9091:9090'
    networks:
     - grafana
     

networks:
  grafana:
   